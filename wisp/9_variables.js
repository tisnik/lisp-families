var x = exports.x = 42;
var y = exports.y = x + 1;
var z = exports.z = [
    1,
    2,
    3,
    4
];
var xx = 42;
var yy = x + 1;
var zz = [
    1,
    2,
    3,
    4
];
x = x - 1;
y = x < 0 ? 'negative' : 'positive';
x = [
    1,
    2,
    3,
    4
];
x = 'Hello World!';
x = 0;
x = true;
x = void 0;
var foo = exports.foo = function foo() {
    return x + 1;
};
var foo = exports.foo = function foo() {
    console.log(x);
    return function () {
        var xø1 = 42;
        return console.log(xø1);
    }.call(this);
};
var foo = exports.foo = function foo() {
    console.log(x);
    return function () {
        var xø1 = 42;
        (function () {
            var xø2 = 99999;
            return console.log(xø2);
        }.call(this));
        return console.log(xø1);
    }.call(this);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFub255bW91cy53aXNwIl0sIm5hbWVzIjpbIngiLCJleHBvcnRzIiwieSIsInoiLCJ4eCIsInl5IiwienoiLCJmb28iLCJjb25zb2xlIiwibG9nIiwieMO4MSIsInjDuDIiXSwibWFwcGluZ3MiOiJBQWtCQSxJQUFLQSxDQUFBLEdBQUFDLE9BQUEsQ0FBQUQsQ0FBQSxHQUFFLEVBQVA7QUFFQSxJQUFLRSxDQUFBLEdBQUFELE9BQUEsQ0FBQUMsQ0FBQSxHQUFLRixDQUFILEdBQUssQ0FBWixDQUZBO0FBSUEsSUFBS0csQ0FBQSxHQUFBRixPQUFBLENBQUFFLENBQUEsR0FBRTtBQUFBLElBQUMsQ0FBRDtBQUFBLElBQUcsQ0FBSDtBQUFBLElBQUssQ0FBTDtBQUFBLElBQU8sQ0FBUDtBQUFBLENBQVAsQ0FKQTtBQU9BLElBQWVDLEVBQUEsR0FBRyxFQUFsQixDQVBBO0FBU0EsSUFBZUMsRUFBQSxHQUFNTCxDQUFILEdBQUssQ0FBdkIsQ0FUQTtBQVdBLElBQWVNLEVBQUEsR0FBRztBQUFBLElBQUMsQ0FBRDtBQUFBLElBQUcsQ0FBSDtBQUFBLElBQUssQ0FBTDtBQUFBLElBQU8sQ0FBUDtBQUFBLENBQWxCLENBWEE7QUFjTU4sQ0FBTixHQUFXQSxDQUFILEdBQUssQ0FBYixDQWRBO0FBaUJNRSxDQUFOLEdBQWVGLENBQUgsR0FBSyxDQUFULEdBQVksVUFBWixHQUF1QixVQUEvQixDQWpCQTtBQW9CTUEsQ0FBTixHQUFRO0FBQUEsSUFBQyxDQUFEO0FBQUEsSUFBRyxDQUFIO0FBQUEsSUFBSyxDQUFMO0FBQUEsSUFBTyxDQUFQO0FBQUEsQ0FBUixDQXBCQTtBQXFCTUEsQ0FBTixHQUFRLGNBQVIsQ0FyQkE7QUFzQk1BLENBQU4sR0FBUSxDQUFSLENBdEJBO0FBdUJNQSxDQUFOLEcsSUFBQSxDQXZCQTtBQXdCTUEsQ0FBTixHLE1BQUEsQ0F4QkE7QUEyQkEsSUFBTU8sR0FBQSxHQUFBTixPQUFBLENBQUFNLEdBQUEsR0FBTixTQUFNQSxHQUFOLEdBRUk7QUFBQSxXQUFHUCxDQUFILEdBQUssQ0FBTDtBQUFBLENBRkosQ0EzQkE7QUFnQ0EsSUFBTU8sR0FBQSxHQUFBTixPQUFBLENBQUFNLEdBQUEsR0FBTixTQUFNQSxHQUFOLEdBRUk7QUFBQSxJQUFBQyxPQUFBLENBQVFDLEdBQVIsQ0FBT1QsQ0FBUDtBQUFBLElBQ0EsTyxZQUFNO0FBQUEsWUFBQVUsRyxHQUFFLEVBQUY7QUFBQSxRQUNGLE9BQUFGLE9BQUEsQ0FBUUMsR0FBUixDQUFPQyxHQUFQLEVBREU7QUFBQSxLLEtBQU4sQyxJQUFBLEVBREE7QUFBQSxDQUZKLENBaENBO0FBdUNBLElBQU1ILEdBQUEsR0FBQU4sT0FBQSxDQUFBTSxHQUFBLEdBQU4sU0FBTUEsR0FBTixHQUVJO0FBQUEsSUFBQUMsT0FBQSxDQUFRQyxHQUFSLENBQU9ULENBQVA7QUFBQSxJQUNBLE8sWUFBTTtBQUFBLFlBQUFVLEcsR0FBRSxFQUFGO0FBQUEsUUFDRixDLFlBQU07QUFBQSxnQkFBQUMsRyxHQUFFLEtBQUY7QUFBQSxZQUNGLE9BQUFILE9BQUEsQ0FBUUMsR0FBUixDQUFPRSxHQUFQLEVBREU7QUFBQSxTLEtBQU4sQyxJQUFBLEdBREU7QUFBQSxRQUdGLE9BQUFILE9BQUEsQ0FBUUMsR0FBUixDQUFPQyxHQUFQLEVBSEU7QUFBQSxLLEtBQU4sQyxJQUFBLEVBREE7QUFBQSxDQUZKIiwic291cmNlc0NvbnRlbnQiOlsiOyBFeGFtcGxlcyBmb3IgV2lzcDogSG9tb2ljb25pYyBKUyB3aXRoIGNsb2p1cmUgc3ludGF4LCBzLWV4cHJlc3Npb25zICYgbWFjcm9zXG47XG47ICAoQykgQ29weXJpZ2h0IDIwMTUgIFBhdmVsIFRpc25vdnNreVxuO1xuOyAgQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFsc1xuOyAgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wXG47ICB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdFxuOyAgaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWxcbjtcbjsgIENvbnRyaWJ1dG9yczpcbjsgwqDCoMKgwqAgUGF2ZWwgVGlzbm92c2t5XG47XG5cbjsgVWvDoXprYSBwb3XFvml0w60gcHJvbcSbbm7DvWNoLlxuXG5cbjsgUG96b3I6IHByb23Em25uw6kgbmVqc291IHZlIFdpc3B1IG5lbcSbbml0ZWxuw6kgKGltbXV0YWJsZSlcbjsgdGFrIGpha28gamUgdG9tdSB2IG9yaWdpbsOhbG7DrW0gQ2xvanVyZSFcbihkZWYgeCA0MilcblxuKGRlZiB5ICgrIHggMSkpXG5cbihkZWYgeiBbMSAyIDMgNF0pXG5cbjsgbG9rw6FsbsOtIHByb23Em25uw6kgdiByw6FtY2kgbW9kdWx1XG4oZGVmIF46cHJpdmF0ZSB4eCA0MilcblxuKGRlZiBeOnByaXZhdGUgeXkgKCsgeCAxKSlcblxuKGRlZiBeOnByaXZhdGUgenogWzEgMiAzIDRdKVxuXG47IG11dMOhdG9yXG4oc2V0ISB4ICgtIHggMSkpXG5cbjsgc3BlY2nDoWxuw60gZm9ybXUgaWYgamUgbW/Fvm7DqSBwb3XFvsOtdCBpIHV2bml0xZkgdsO9cmF6dVxuKHNldCEgeSAoaWYgKDwgeCAwKSBcIm5lZ2F0aXZlXCIgXCJwb3NpdGl2ZVwiKSlcblxuOyB6bcSbbmEgdHlwdSBob2Rub3R5IHVsb8W+ZW7DqSBkbyBwcm9txJtubsOpXG4oc2V0ISB4IFsxIDIgMyA0XSlcbihzZXQhIHggXCJIZWxsbyBXb3JsZCFcIilcbihzZXQhIHggMClcbihzZXQhIHggdHJ1ZSlcbihzZXQhIHggbmlsKVxuXG47IHByb23Em25uw6kganNvdSBwxZnDrXN0dXBuw6kgaSB1dm5pdMWZIGZ1bmtjw61cbihkZWZuIGZvb1xuICAgIFtdXG4gICAgKCsgeCAxKSlcblxuOyBwcm9txJtubsOpIHZlcnN1cyBsb2vDoWxuw60gc3ltYm9seVxuKGRlZm4gZm9vXG4gICAgW11cbiAgICAocHJpbnQgeClcbiAgICAobGV0IFt4IDQyXVxuICAgICAgICAocHJpbnQgeCkpKVxuXG47IHByb23Em25uw6kgdmVyc3VzIGxva8OhbG7DrSBzeW1ib2x5XG4oZGVmbiBmb29cbiAgICBbXVxuICAgIChwcmludCB4KVxuICAgIChsZXQgW3ggNDJdXG4gICAgICAgIChsZXQgW3ggOTk5OTldXG4gICAgICAgICAgICAocHJpbnQgeCkpXG4gICAgICAgIChwcmludCB4KSkpXG5cbiJdfQ==
